#!/usr/bin/python

rule idat_intensity:
    input:
        idat = getIdat
    params:
        color = '{col}'
    output:
        txt = 'idat_intensity_{col}/{idatBase}.intensity.txt',
        R = 'idat_intensity_{col}/{idatBase}.intensity.R',
        Rout = 'idat_intensity_{col}/{idatBase}.intensity.R.out'
    run:
        rTxt = '''
        medianIntensIdat <- function(idat){
        require(illuminaio)
        i <- readIDAT(idat)
        Intens <- i$Quants[,1]
        median(Intens)
        }

        medIntens <- medianIntensIdat("''' + input.idat + '''")
        write.table(medIntens, file = "''' + output.txt + '''", quote = F, row.names = F, col.names = F) 
        '''
        with open(output.R, 'w') as Rout:
            Rout.write(rTxt)
        shell('module load R;R --vanilla < {output.R} > {output.Rout}')

rule combine_idat_intensity:
    input:
        expand('idat_intensity_{col}/{idatBase}.intensity.txt', idatBase = idatBaseDict.keys())
    output:
        'all_sample_idat_intensity/idat_intensity_{col}.csv'
    run:
        with open(output[0], 'w') as out:
            out.write('SampId,ChipId,MedianIntensity\n')
            for i in input:
                chipId = os.path.basename(i).split('.')[0]
                sampId = chipIdToSampDict[chipId]
                with open(i) as f:
                    line = f.readline()
                medIntens = line.strip()
                out.write(','.join([sampId, chipId, medIntens]) + '\n')

