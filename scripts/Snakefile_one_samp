#!/usr/bin/python


'''
SnakeMake pipeline to run ArrayScan2CNV
'''

import glob
import sys
import os
import shutil
import fnmatch
from snakemake.utils import R



configfile: "config.yaml"

scriptDir = config['repo_scripts']
gtc_dir = config['gtc_dir']
gtcFiles = []
SAMPLE_IDS = []
sampIdToGtcDict = {}
for root, dirnames, filenames in os.walk(gtc_dir):
    for filename in fnmatch.filter(filenames, '*.gtc'):
        gtc = os.path.join(root, filename)
        sampId = filename[:-4]
        SAMPLE_IDS.append(sampId)
        sampIdToGtcDict[sampId] = gtc
        gtcFiles.append(gtc)



def getGtc(wildcards):
    sampId = wildcards.sample_id
    return sampIdToGtcDict[sampId]


rule all:
    input:
        expand('gsrc/{sample_id}.gsrc.bed', sample_id = SAMPLE_IDS),
        expand('PennCnvOut/{sample_id}.PennCnvOut.txt', sample_id = SAMPLE_IDS),
        expand('PennCnvBed/{sample_id}.PennCnvOut.bed', sample_id = SAMPLE_IDS)



rule gtc2PennCNV:
    input:
        gtc = getGtc,
        bpm = config['bpm']
    output:
        'PennCnvIn/{sample_id}.PennCNV_in.txt'
    shell:
        'module load python/2.7.5;python ' + scriptDir + '/gtc2PennCNV.py {input.gtc} {input.bpm} {output}'



rule gsrc2Cnv:
    input:
        'PennCnvIn/{sample_id}.PennCNV_in.txt'
    output:
        txt = 'gsrc/{sample_id}.gsrc.txt',
        bed = 'gsrc/{sample_id}.gsrc.bed'
    shell:
        'module load R/3.3.0;Rscript ' + scriptDir + '/../R/gsrcCNVcalling.R {input} {output.txt} {output.bed}'



rule pennCnv:
    input:
        'PennCnvIn/{sample_id}.PennCNV_in.txt'
    output:
        'PennCnvOut/{sample_id}.PennCnvOut.txt'
    params:
        hmm = config['hmm'],
        pfb = config['pfb']
    log:
        'logs/{sample_id}.log'
    shell:
        'module load PennCNV/2015-v1.0.3;detect_cnv.pl -test -hmm {params.hmm} -pfb {params.pfb} {input} -log {log} -out {output}'

rule pennCnvBed:
    input:
        'PennCnvOut/{sample_id}.PennCnvOut.txt'
    output:
        'PennCnvBed/{sample_id}.PennCnvOut.bed'
    params:
        track = 'CNVs in {sample_id}'
    shell:
        'module load PennCNV/2015-v1.0.3;visualize_cnv.pl {input} -format bed -track "{params.track}" > {output}'
